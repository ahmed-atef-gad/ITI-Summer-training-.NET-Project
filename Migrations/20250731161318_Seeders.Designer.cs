// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Context;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20250731161318_Seeders")]
    partial class Seeders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Electronic devices and gadgets",
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Various genres of books",
                            Name = "Books"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Apparel and accessories",
                            Name = "Clothing"
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Home appliances and furniture",
                            Name = "Home"
                        },
                        new
                        {
                            CategoryId = 5,
                            Description = "Sporting goods and equipment",
                            Name = "Sports"
                        });
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Latest model smartphone",
                            ImagePath = "images/smartphone.jpg",
                            Price = 499.99m,
                            Quantity = 10,
                            Title = "Smartphone"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "High performance laptop",
                            ImagePath = "images/laptop.jpg",
                            Price = 899.99m,
                            Quantity = 15,
                            Title = "Laptop"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            Description = "Noise cancelling headphones",
                            ImagePath = "images/headphones.jpg",
                            Price = 59.99m,
                            Quantity = 30,
                            Title = "Headphones"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            Description = "Bestselling novel",
                            ImagePath = "images/novel.jpg",
                            Price = 19.99m,
                            Quantity = 50,
                            Title = "Novel"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2,
                            Description = "Delicious recipes",
                            ImagePath = "images/cookbook.jpg",
                            Price = 29.99m,
                            Quantity = 20,
                            Title = "Cookbook"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 2,
                            Description = "Educational textbook",
                            ImagePath = "images/textbook.jpg",
                            Price = 79.99m,
                            Quantity = 25,
                            Title = "Textbook"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 3,
                            Description = "Cotton t-shirt",
                            ImagePath = "images/tshirt.jpg",
                            Price = 25.00m,
                            Quantity = 100,
                            Title = "T-Shirt"
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 3,
                            Description = "Denim jeans",
                            ImagePath = "images/jeans.jpg",
                            Price = 49.99m,
                            Quantity = 60,
                            Title = "Jeans"
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 3,
                            Description = "Winter jacket",
                            ImagePath = "images/jacket.jpg",
                            Price = 89.99m,
                            Quantity = 40,
                            Title = "Jacket"
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 4,
                            Description = "Comfortable sofa",
                            ImagePath = "images/sofa.jpg",
                            Price = 399.99m,
                            Quantity = 5,
                            Title = "Sofa"
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 4,
                            Description = "Desk lamp",
                            ImagePath = "images/lamp.jpg",
                            Price = 39.99m,
                            Quantity = 20,
                            Title = "Lamp"
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 4,
                            Description = "Kitchen blender",
                            ImagePath = "images/blender.jpg",
                            Price = 59.99m,
                            Quantity = 15,
                            Title = "Blender"
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 5,
                            Description = "Official size football",
                            ImagePath = "images/football.jpg",
                            Price = 29.99m,
                            Quantity = 35,
                            Title = "Football"
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 5,
                            Description = "Professional tennis racket",
                            ImagePath = "images/racket.jpg",
                            Price = 79.99m,
                            Quantity = 10,
                            Title = "Tennis Racket"
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 5,
                            Description = "Non-slip yoga mat",
                            ImagePath = "images/yogamat.jpg",
                            Price = 24.99m,
                            Quantity = 50,
                            Title = "Yoga Mat"
                        });
                });

            modelBuilder.Entity("Project.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "alice.smith@example.com",
                            FirstName = "Alice",
                            LastName = "Smith",
                            Password = "Password123"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "bob.johnson@example.com",
                            FirstName = "Bob",
                            LastName = "Johnson",
                            Password = "Password456"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "charlie.brown@example.com",
                            FirstName = "Charlie",
                            LastName = "Brown",
                            Password = "Password789"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "david.williams@example.com",
                            FirstName = "David",
                            LastName = "Williams",
                            Password = "Password321"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "eve.davis@example.com",
                            FirstName = "Eve",
                            LastName = "Davis",
                            Password = "Password654"
                        },
                        new
                        {
                            UserId = 6,
                            Email = "frank.miller@example.com",
                            FirstName = "Frank",
                            LastName = "Miller",
                            Password = "Password987"
                        },
                        new
                        {
                            UserId = 7,
                            Email = "grace.wilson@example.com",
                            FirstName = "Grace",
                            LastName = "Wilson",
                            Password = "Password111"
                        },
                        new
                        {
                            UserId = 8,
                            Email = "hank.moore@example.com",
                            FirstName = "Hank",
                            LastName = "Moore",
                            Password = "Password222"
                        },
                        new
                        {
                            UserId = 9,
                            Email = "ivy.taylor@example.com",
                            FirstName = "Ivy",
                            LastName = "Taylor",
                            Password = "Password333"
                        },
                        new
                        {
                            UserId = 10,
                            Email = "jack.anderson@example.com",
                            FirstName = "Jack",
                            LastName = "Anderson",
                            Password = "Password444"
                        });
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.HasOne("Project.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Project.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
